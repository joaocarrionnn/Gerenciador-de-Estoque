<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <%- include('./partials/head'); %>
    <style>
        :root {
            --primary: #2d3748;
            --secondary: #2d3748;
            --success: #2d3748;
            --warning: #2d3748;
            --info: #2d3748;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --light-gray: #e9ecef;
        }
        
        body {
            background-color: #f5f7fb;
            color: #333;
            min-height: 100vh;
        }
        
        .main-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 1.5rem;
        }
        
        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }
        
        .section-title {
            font-size: 1.75rem;
            font-weight: 700;
            color: #2d3748;
        }
        
        .card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            overflow: hidden;
            margin-bottom: 2rem;
            transition: all 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
        }
        
        .card-header {
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid #e2e8f0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        }
        
        .card-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #2d3748;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .card-body {
            padding: 1.5rem;
        }
        
        .card-footer {
            padding: 1rem 1.5rem;
            background-color: #f8f9fa;
            border-top: 1px solid #e2e8f0;
        }
        
        .form-control, .form-select {
            padding: 0.75rem 1rem;
            border-radius: 8px;
            margin-bottom: 1.2rem;
            border: 1px solid #d1d3e2;
            width: 100%;
            font-size: 1rem;
        }
        
        .form-label {
            font-weight: 600;
            color: var(--dark);
            margin-bottom: 0.5rem;
            display: block;
        }
        
        .required-field::after {
            content: " *";
            color: #2b1a18;
        }
        
        .input-group {
            display: flex;
        }
        
        .input-group .form-control {
            margin-bottom: 0;
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
        
        .input-group-text {
            background-color: #f8f9fa;
            border: 1px solid #d1d3e2;
            border-left: none;
            padding: 0.75rem 1rem;
            border-top-right-radius: 8px;
            border-bottom-right-radius: 8px;
            color: var(--gray);
        }
        
        .alert {
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
        }
        
        .alert-info {
            background-color: rgba(114, 9, 183, 0.15);
            border-left: 4px solid var(--info);
            color: #2c5282;
        }
        
        .alert-warning {
            background-color: rgba(255, 193, 7, 0.15);
            border-left: 4px solid #ffc107;
            color: #856404;
        }
        
        .stats-info {
            font-size: 0.85rem;
            color: var(--gray);
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        .view-all-btn {
            background: transparent;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 0.6rem 1.2rem;
            font-size: 0.9rem;
            color: var(--primary);
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
        }
        
        .view-all-btn:hover {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(67, 97, 238, 0.2);
        }
        
        .toast-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
        }
        
        .text-success {
            color: #28a745 !important;
        }
        
        .text-primary {
            color: #464343 !important;
        }
        
        .text-danger {
            color: #e74c3c !important;
        }
        
        .text-info {
            color: #ffa703 !important;
        }
        
        .text-muted {
            color: var(--gray) !important;
        }
        
        .bg-success {
            background-color: #28a745 !important;
        }
        
        .bg-primary {
            background-color: #3B82F6 !important;
        }
        
        .bg-info {
            background-color: #17a2b8 !important;
        }
        
        .progress {
            height: 8px;
            background-color: #e9ecef;
            border-radius: 4px;
        }
        
        .progress-bar {
            height: 100%;
            border-radius: 4px;
            transition: width 0.3s ease;
        }
        
        .mb-4 {
            margin-bottom: 1.5rem;
        }
        
        .mt-4 {
            margin-top: 1.5rem;
        }
        
        .me-2 {
            margin-right: 0.5rem;
        }
        
        .ms-3 {
            margin-left: 1rem;
        }
        
        .p-6 {
            padding: 1.5rem;
        }
        
        .grid {
            display: grid;
        }
        
        .grid-cols-1 {
            grid-template-columns: repeat(1, minmax(0, 1fr));
        }
        
        .grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
        
        .grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
        
        .grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
        
        .gap-6 {
            gap: 1.5rem;
        }
        
        .text-center {
            text-align: center;
        }
        
        .border-r {
            border-right: 1px solid #e5e7eb;
        }
        
        .border-t {
            border-top: 1px solid #e5e7eb;
        }
        
        .font-semibold {
            font-weight: 600;
        }
        
        .font-bold {
            font-weight: 700;
        }
        
        .text-2xl {
            font-size: 1.5rem;
        }
        
        .text-sm {
            font-size: 0.875rem;
        }
        
        .d-grid {
            display: grid;
        }
        
        .py-3 {
            padding-top: 0.75rem;
            padding-bottom: 0.75rem;
        }
        
        .small {
            font-size: 0.875rem;
        }
        
        .chart-container {
            position: relative;
            height: 300px;
            width: 100%;
        }
        
        .export-btn {
            background: transparent;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 0.75rem 1.2rem;
            font-size: 0.9rem;
            color: var(--primary);
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
        }
        
        .export-btn:hover {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(67, 97, 238, 0.2);
        }
        
        .stats-card {
            text-align: center;
            padding: 1.5rem;
        }
        
        .stats-value {
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }
        
        .stats-label {
            font-size: 0.9rem;
            color: var(--gray);
        }
        
        @media (min-width: 1024px) {
            .lg\:grid-cols-2 {
                grid-template-columns: repeat(2, minmax(0, 1fr));
            }
            
            .lg\:grid-cols-3 {
                grid-template-columns: repeat(3, minmax(0, 1fr));
            }
            
            .lg\:grid-cols-4 {
                grid-template-columns: repeat(4, minmax(0, 1fr));
            }
        }
        
        @media (max-width: 768px) {
            .main-container {
                padding: 1rem;
            }
            
            .section-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }
            
            .card-header {
                flex-direction: column;
                gap: 1rem;
                align-items: flex-start;
            }
            
            .grid-cols-2, .grid-cols-3, .grid-cols-4 {
                grid-template-columns: repeat(1, minmax(0, 1fr));
            }
            
            .border-r {
                border-right: none;
                border-bottom: 1px solid #e5e7eb;
                padding-bottom: 1rem;
                margin-bottom: 1rem;
            }
            
            .chart-container {
                height: 250px;
            }
        }

        .success-btn {
            background-color: #27ae60;
            color: #ffffff;
            border: none;
            border-radius: 8px;
            padding: 16px 32px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            text-decoration: none;
            position: relative;
            overflow: hidden;
            width: 100%;
            max-width: 280px;
        }

        .success-btn:hover {
            background-color: #219653;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

        .success-btn:active {
            transform: translateY(0);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .success-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.7s ease;
        }

        .success-btn:hover::before {
            left: 100%;
        }

        .success-btn i {
            font-size: 18px;
            transition: transform 0.3s ease;
        }

        .success-btn:hover i {
            transform: scale(1.1);
        }

        .alert-success {
    background-color: #d1fae5;
    border: 1px solid #10b981;
    color: #065f46;
}

.alert-danger {
    background-color: #fee2e2;
    border: 1px solid #ef4444;
    color: #7f1d1d;
}

.alert {
    padding: 1rem;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}
    </style>
</head>
<body class="flex">
    <%- include('./partials/header'); %>
    
    <!-- Conteúdo Principal -->
    <main class="flex-1 overflow-auto bg-gray-50 min-h-screen">
        <div class="main-container">
            <!-- Header da Página -->
            <div class="section-header">
                <h1 class="section-title">
                    <i class="fas fa-chart-line text-primary mr-2"></i>
                    Relatórios e Estatísticas
                </h1>
            </div>
            
            <!-- Filtros -->
            <div class="card mb-6">
                <div class="card-header">
                    <h2 class="card-title">
                        <i class="fas fa-filter text-primary"></i>
                        Filtrar Relatórios
                    </h2>
                </div>
                <div class="card-body">
                    <form id="report-filter-form">
                        <div class="grid grid-cols-1 lg:grid-cols-4 gap-4">
                            <div>
                                <label for="start-date" class="form-label">Data Inicial</label>
                                <input type="date" class="form-control" id="start-date" name="start-date">
                            </div>
                            <div>
                                <label for="end-date" class="form-label">Data Final</label>
                                <input type="date" class="form-control" id="end-date" name="end-date">
                            </div>
                        </div>
                        <div class="d-grid mt-4">
                            <button type="submit" class="success-btn py-3">
                                <i class="fas fa-check-circle me-2"></i>Aplicar Filtros
                            </button>
                        </div>
                    </form>
                </div>
            </div>
            
            <!-- Estatísticas Rápidas -->
            <div class="grid grid-cols-2 lg:grid-cols-4 gap-6 mb-6">
                <div class="card stats-card">
                    <div class="text-primary stats-value" id="total-reagents">
                        <%= stats.totalReagents || 0 %>
                    </div>
                    <div class="stats-label">Total de Reagentes</div>
                </div>
                <div class="card stats-card">
                    <div class="text-success stats-value" id="month-inputs">
                        <%= stats.monthInputs || 0 %>
                    </div>
                    <div class="stats-label">Entradas (Mês)</div>
                </div>
                <div class="card stats-card">
                    <div class="text-danger stats-value" id="month-outputs">
                        <%= stats.monthOutputs || 0 %>
                    </div>
                    <div class="stats-label">Saídas (Mês)</div>
                </div>
                <div class="card stats-card">
                    <div class="text-info stats-value" id="low-stock">
                        <%= stats.lowStock || 0 %>
                    </div>
                    <div class="stats-label">Baixo Estoque</div>
                </div>
            </div>
            
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <!-- Gráfico de Movimentação -->
                <div class="card">
                    <div class="card-header">
                        <h2 class="card-title">
                            <i class="fas fa-chart-bar text-primary"></i>
                            Movimentação Mensal
                        </h2>
                        <button class="view-all-btn" id="view-movement-details">
                            <i class="fas fa-expand"></i> Detalhes
                        </button>
                    </div>
                    <div class="card-body">
                        <div class="chart-container">
                            <canvas id="movementChart"></canvas>
                        </div>
                    </div>
                </div>
                
                <!-- Gráfico de Categorias -->
                <div class="card">
                    <div class="card-header">
                        <h2 class="card-title">
                            <i class="fas fa-chart-pie text-primary"></i>
                            Distribuição por Categoria
                        </h2>
                        <button class="view-all-btn" id="view-category-details">
                            <i class="fas fa-expand"></i> Detalhes
                        </button>
                    </div>
                    <div class="card-body">
                        <div class="chart-container">
                            <canvas id="categoryChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            
            
            
            <!-- Tabela de Itens com Baixo Estoque -->
            <div class="card mt-6">
                <div class="card-header">
                    <h2 class="card-title">
                        <i class="fas fa-exclamation-triangle text-danger"></i>
                        Itens com Estoque Crítico
                    </h2>
                    <button class="view-all-btn" id="view-all-low-stock">
                        <i class="fas fa-list"></i> Ver todos
                    </button>
                </div>
                <div class="card-body">
                    <div class="overflow-x-auto">
                        <table class="min-w-full">
                            <thead>
                                <tr class="border-b">
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Reagente</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Categoria</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estoque Atual</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estoque Mínimo</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                </tr>
                            </thead>
                            <tbody id="low-stock-items">
                                <% if (criticalItems && criticalItems.length > 0) { %>
                                    <% criticalItems.forEach(item => { %>
                                        <tr class="border-b">
                                            <td class="px-6 py-4 whitespace-nowrap"><%= item.reagent %></td>
                                            <td class="px-6 py-4 whitespace-nowrap"><%= item.category %></td>
                                            <td class="px-6 py-4 whitespace-nowrap"><%= item.current %></td>
                                            <td class="px-6 py-4 whitespace-nowrap"><%= item.minimum %></td>
                                            <td class="px-6 py-4 whitespace-nowrap">
                                                <span class="px-2 py-1 text-xs font-semibold rounded-full <%= item.status === 'Crítico' ? 'bg-danger' : 'bg-warning' %> text-white">
                                                    <%= item.status %>
                                                </span>
                                            </td>
                                        </tr>
                                    <% }) %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="5" class="px-6 py-4 text-center text-gray-500">
                                            Nenhum item com estoque crítico encontrado
                                        </td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-footer">
                    <span class="stats-info">
                        <i class="fas fa-history"></i>
                        <span id="last-update">Atualizado em <%= new Date().toLocaleString('pt-BR') %></span>
                    </span>
                </div>
            </div>
        </div>
    </main>
    
    <!-- Container para toasts (notificações) -->
    <div class="toast-container"></div>

    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
       // Variáveis globais para os gráficos
let movementChart = null;
let categoryChart = null;

// Função para carregar dados dos gráficos
async function loadChartData() {
    try {
        // Carregar dados de movimentação
        const movementResponse = await fetch('/api/relatorios/movimentacao-mensal');
        const movementData = await movementResponse.json();

        // Carregar dados de categorias
        const categoryResponse = await fetch('/api/relatorios/distribuicao-categorias');
        const categoryData = await categoryResponse.json();

        return {
            movementData: movementData,
            categoryData: categoryData
        };
    } catch (error) {
        console.error('Erro ao carregar dados dos gráficos:', error);
        return {
            movementData: {
                labels: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                inputs: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                outputs: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
            },
            categoryData: {
                labels: ['Sem dados'],
                values: [100],
                colors: ['#9CA3AF']
            }
        };
    }
}

// Função para inicializar os gráficos
async function initCharts() {
    const chartData = await loadChartData();

    // Destruir gráficos existentes
    if (movementChart) {
        movementChart.destroy();
    }
    if (categoryChart) {
        categoryChart.destroy();
    }

    // Gráfico de Movimentação
    const movementCtx = document.getElementById('movementChart').getContext('2d');
    movementChart = new Chart(movementCtx, {
        type: 'line',
        data: {
            labels: chartData.movementData.labels,
            datasets: [
                {
                    label: 'Entradas',
                    data: chartData.movementData.inputs,
                    borderColor: '#10B981',
                    backgroundColor: 'rgba(16, 185, 129, 0.1)',
                    tension: 0.3,
                    fill: true,
                    borderWidth: 2
                },
                {
                    label: 'Saídas',
                    data: chartData.movementData.outputs,
                    borderColor: '#EF4444',
                    backgroundColor: 'rgba(239, 68, 68, 0.1)',
                    tension: 0.3,
                    fill: true,
                    borderWidth: 2
                }
            ]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'top',
                },
                title: {
                    display: true,
                    text: 'Movimentação Mensal - ' + new Date().getFullYear()
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    title: {
                        display: true,
                        text: 'Quantidade de Movimentações'
                    }
                },
                x: {
                    title: {
                        display: true,
                        text: 'Meses'
                    }
                }
            }
        }
    });
    
    // Gráfico de Categorias
    const categoryCtx = document.getElementById('categoryChart').getContext('2d');
    categoryChart = new Chart(categoryCtx, {
        type: 'doughnut',
        data: {
            labels: chartData.categoryData.labels,
            datasets: [{
                data: chartData.categoryData.values,
                backgroundColor: chartData.categoryData.colors,
                borderWidth: 2,
                borderColor: '#ffffff'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'right',
                },
                title: {
                    display: true,
                    text: 'Distribuição por Categoria'
                }
            }
        }
    });
}

// Função para exibir notificações
function showToast(message, type = 'success') {
    // Criar elemento de toast simples
    const toast = document.createElement('div');
    toast.className = `alert alert-${type === 'success' ? 'success' : 'danger'} mb-3`;
    toast.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 9999;
        min-width: 300px;
    `;
    toast.innerHTML = `
        <div class="d-flex align-items-center">
            <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle'} me-2"></i>
            <span>${message}</span>
            <button type="button" class="btn-close ms-auto" onclick="this.parentElement.parentElement.remove()"></button>
        </div>
    `;
    
    document.querySelector('.toast-container').appendChild(toast);
    
    // Remover automaticamente após 5 segundos
    setTimeout(() => {
        if (toast.parentElement) {
            toast.remove();
        }
    }, 5000);
}

// Função para carregar estatísticas em tempo real
async function loadRealTimeStats() {
    try {
        const response = await fetch('/api/relatorios/stats');
        const data = await response.json();
        
        // Atualizar os contadores
        document.getElementById('total-reagents').textContent = data.totalReagents;
        document.getElementById('month-inputs').textContent = data.monthInputs;
        document.getElementById('month-outputs').textContent = data.monthOutputs;
        document.getElementById('low-stock').textContent = data.lowStock;
        
        // Atualizar a data da última atualização
        document.getElementById('last-update').textContent = `Atualizado em ${new Date().toLocaleString('pt-BR')}`;
        
    } catch (error) {
        console.error('Erro ao carregar estatísticas em tempo real:', error);
    }
}

// Envio do formulário de filtros
document.getElementById('report-filter-form').addEventListener('submit', async function(event) {
    event.preventDefault();
    
    const formData = new FormData(this);
    const data = Object.fromEntries(formData.entries());
    
    try {
        showToast('Filtros aplicados com sucesso!');
        
        // Recarregar os gráficos com os filtros (implementar filtros depois)
        await initCharts();
    } catch (error) {
        console.error('Erro ao aplicar filtros:', error);
        showToast('Erro ao aplicar filtros. Tente novamente.', 'danger');
    }
});



// Botões de detalhes
document.getElementById('view-movement-details').addEventListener('click', function() {
    window.location.href = '/movimentacoes';
});

document.getElementById('view-category-details').addEventListener('click', function() {
    window.location.href = '/relatorios/categorias';
});

document.getElementById('view-all-low-stock').addEventListener('click', function() {
    showToast('Redirecionando para todos os itens com baixo estoque...');
    // window.location.href = '/relatorios/estoque-baixo';
});

// Função para debug - verificar dados recebidos
function debugStats() {
    console.log('Dados das estatísticas:', {
        totalReagents: <%= stats.totalReagents || 0 %>,
        monthInputs: <%= stats.monthInputs || 0 %>,
        monthOutputs: <%= stats.monthOutputs || 0 %>,
        lowStock: <%= stats.lowStock || 0 %>
    });
}

// Carregar dados iniciais quando a página carregar
document.addEventListener('DOMContentLoaded', async function() {
    debugStats();
    await loadRealTimeStats();
    await initCharts();
    
    // Atualizar a cada 30 segundos
    setInterval(loadRealTimeStats, 30000);
});
    </script>
</body>
</html>