<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <%- include('./partials/head'); %>
    <style>
        :root {
            --primary: #2d3748;
            --secondary: #2d3748;
            --success: #2d3748;
            --warning: #2d3748;
            --info: #2d3748;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --light-gray: #e9ecef;
        }
        
        body {
            background-color: #f5f7fb;
            color: #333;
            min-height: 100vh;
        }
        
        .main-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 1.5rem;
        }
        
        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }
        
        .section-title {
            font-size: 1.75rem;
            font-weight: 700;
            color: #2d3748;
        }
        
        .card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            overflow: hidden;
            margin-bottom: 2rem;
            transition: all 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
        }
        
        .card-header {
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid #e2e8f0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        }
        
        .card-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #2d3748;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
    
        
       
        
        .form-control, .form-select {
            padding: 0.75rem 1rem;
            border-radius: 8px;
            margin-bottom: 1.2rem;
            border: 1px solid #d1d3e2;
            width: 100%;
            font-size: 1rem;
        }
        
        .form-label {
            font-weight: 600;
            color: var(--dark);
            margin-bottom: 0.5rem;
            display: block;
        }
        
        .required-field::after {
            content: " *";
            color: #2b1a18;
        }
        
        .input-group {
            display: flex;
        }
        
        .input-group .form-control {
            margin-bottom: 0;
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
        
        .input-group-text {
            background-color: #f8f9fa;
            border: 1px solid #d1d3e2;
            border-left: none;
            padding: 0.75rem 1rem;
            border-top-right-radius: 8px;
            border-bottom-right-radius: 8px;
            color: var(--gray);
        }
        
        .alert {
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
        }
        
        .alert-info {
            background-color: rgba(114, 9, 183, 0.15);
            border-left: 4px solid var(--info);
            color: #2c5282;
        }
        
        .alert-warning {
            background-color: rgba(255, 193, 7, 0.15);
            border-left: 4px solid #ffc107;
            color: #856404;
        }
        
        .movement-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .movement-item {
            display: flex;
            align-items: center;
            padding: 1rem;
            border-bottom: 1px solid #e3e6f0;
            transition: background-color 0.3s;
        }
        
        .movement-item:hover {
            background-color: #f8f9fc;
        }
        
        .movement-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            flex-shrink: 0;
        }
        
        .movement-in {
            background-color: rgba(52, 168, 83, 0.2);
            color: #28a745;
        }
        
        .movement-out {
            background-color: rgba(231, 74, 59, 0.2);
            color: #e74c3c;
        }
        
        .movement-content {
            flex-grow: 1;
        }
        
        .movement-title {
            font-weight: 600;
            margin: 0 0 0.25rem 0;
            color: var(--dark);
        }
        
        .movement-details {
            display: flex;
            gap: 15px;
        }
        
        .movement-quantity, .movement-date {
            font-size: 0.85rem;
            color: #6e707e;
        }
        
        .stats-info {
            font-size: 0.85rem;
            color: var(--gray);
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        .view-all-btn {
            background: transparent;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 0.6rem 1.2rem;
            font-size: 0.9rem;
            color: var(--primary);
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
        }
        
        .view-all-btn:hover {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(67, 97, 238, 0.2);
        }
        
        .toast-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
        }
        
        .text-success {
            color: var(--success) !important;
        }
        
        .text-primary {
            color: var(--primary) !important;
        }
        
        .text-danger {
            color: var(--warning) !important;
        }
        
        .text-info {
            color: var(--info) !important;
        }
        
        .text-muted {
            color: var(--gray) !important;
        }
        
        .bg-success {
            background-color: var(--success) !important;
        }
        
        .bg-primary {
            background-color: var(--primary) !important;
        }
        
        .bg-info {
            background-color: var(--info) !important;
        }
        
        .progress {
            height: 8px;
            background-color: #e9ecef;
            border-radius: 4px;
        }
        
        .progress-bar {
            height: 100%;
            border-radius: 4px;
            transition: width 0.3s ease;
        }
        
        .mb-4 {
            margin-bottom: 1.5rem;
        }
        
        .mt-4 {
            margin-top: 1.5rem;
        }
        
        .me-2 {
            margin-right: 0.5rem;
        }
        
        .ms-3 {
            margin-left: 1rem;
        }
        
        .p-6 {
            padding: 1.5rem;
        }
        
        .grid {
            display: grid;
        }
        
        .grid-cols-1 {
            grid-template-columns: repeat(1, minmax(0, 1fr));
        }
        
        .grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
        
        .gap-6 {
            gap: 1.5rem;
        }
        
        .text-center {
            text-align: center;
        }
        
        .border-r {
            border-right: 1px solid #e5e7eb;
        }
        
        .border-t {
            border-top: 1px solid #e5e7eb;
        }
        
        .font-semibold {
            font-weight: 600;
        }
        
        .font-bold {
            font-weight: 700;
        }
        
        .text-2xl {
            font-size: 1.5rem;
        }
        
        .text-sm {
            font-size: 0.875rem;
        }
        
        .d-grid {
            display: grid;
        }
        
        .py-3 {
            padding-top: 0.75rem;
            padding-bottom: 0.75rem;
        }
        
        .small {
            font-size: 0.875rem;
        }
        
        @media (min-width: 1024px) {
            .lg\:grid-cols-2 {
                grid-template-columns: repeat(2, minmax(0, 1fr));
            }
        }
        
        @media (max-width: 768px) {
            .main-container {
                padding: 1rem;
            }
            
            .section-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }
            
            .card-header {
                flex-direction: column;
                gap: 1rem;
                align-items: flex-start;
            }
            
            .movement-details {
                flex-direction: column;
                gap: 5px;
            }
            
            .grid-cols-3 {
                grid-template-columns: repeat(1, minmax(0, 1fr));
            }
            
            .border-r {
                border-right: none;
                border-bottom: 1px solid #e5e7eb;
                padding-bottom: 1rem;
                margin-bottom: 1rem;
            }
        }


        .d-grid {
    display: grid;
    padding: 20px;
    justify-content: center;
    align-items: center;
}

.success-btn {
    background-color: #27ae60; /* Verde moderno e profissional */
    color: #ffffff;
    border: none;
    border-radius: 8px;
    padding: 16px 32px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    text-decoration: none;
    position: relative;
    overflow: hidden;
    width: 100%;
    max-width: 280px;
}

.success-btn:hover {
    background-color: #219653; /* Tom mais escuro no hover */
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

.success-btn:active {
    transform: translateY(0);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.success-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.7s ease;
}

.success-btn:hover::before {
    left: 100%;
}

.success-btn i {
    font-size: 18px;
    transition: transform 0.3s ease;
}

.success-btn:hover i {
    transform: scale(1.1);
}
    </style>
</head>
<body class="flex">
    <%- include('./partials/header'); %>
    
    <!-- Conteúdo Principal -->
    <main class="flex-1 overflow-auto bg-gray-50 min-h-screen">
        <div class="main-container">
            <!-- Header da Página -->
            <div class="section-header">
                <h1 class="section-title">
                    <i class="fas fa-sign-in-alt text-success mr-2"></i>
                    Entrada de Reagentes
                </h1>
            </div>
            
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <!-- Formulário de Entrada -->
                <div>
                    <div class="card">
                        <div class="card-header">
                            <h2 class="card-title">
                                <i class="fas fa-sign-in-alt text-success"></i>
                                Registrar Entrada de Reagente
                            </h2>
                        </div>
                        <div class="p-6">
                            <form id="input-form">
                                <div class="mb-4">
                                    <label for="reagent" class="form-label required-field">Reagente</label>
                                    <select class="form-select" id="reagent" name="reagent" required>
                                        <option value="" selected disabled>Selecione um reagente</option>
                                        <option value="1">Ácido clorídrico (HCl)</option>
                                        <option value="2">Hidróxido de sódio (NaOH)</option>
                                        <option value="3">Sulfato de cobre (CuSO₄)</option>
                                        <option value="4">Água destilada (H₂O)</option>
                                        <option value="5">Cloreto de sódio (NaCl)</option>
                                        <option value="6">Ácido sulfúrico (H₂SO₄)</option>
                                    </select>
                                </div>
                                
                                <div class="mb-4">
                                    <label for="quantity" class="form-label required-field">Quantidade</label>
                                    <div class="input-group">
                                        <input type="number" class="form-control" id="quantity" name="quantity" min="0.1" step="0.1" required>
                                        <span class="input-group-text" id="unit-measure">unidades</span>
                                    </div>
                                </div>
                                
                                <div class="mb-4">
                                    <label for="supplier" class="form-label required-field">Fornecedor</label>
                                    <input type="text" class="form-control" id="supplier" name="supplier" required>
                                </div>
                                
                                <div class="mb-4">
                                    <label for="purchase-order" class="form-label">Ordem de Compra</label>
                                    <input type="text" class="form-control" id="purchase-order" name="purchase-order">
                                </div>
                                
                                <div class="mb-4">
                                    <label for="expiration-date" class="form-label">Data de Validade</label>
                                    <input type="date" class="form-control" id="expiration-date" name="expiration-date">
                                </div>
                                
                                <div class="mb-4">
                                    <label for="notes" class="form-label">Observações</label>
                                    <textarea class="form-control" id="notes" name="notes" rows="3"></textarea>
                                </div>
                                
                                <div class="d-grid">
                                    <button type="submit" class="success-btn py-3">
                                        <i class="fas fa-check-circle me-2"></i>Registrar Entrada
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                
                <!-- Últimas Movimentações e Estatísticas -->
                <div>
                    <div class="card">
                        <div class="card-header">
                            <h2 class="card-title">
                                <i class="fas fa-exchange-alt"></i>
                                Últimas Movimentações
                            </h2>
                            <button class="view-all-btn" id="view-all-movements">
                                <i class="fas fa-list"></i> Ver todas
                            </button>
                        </div>
                        
                        <ul class="movement-list">
                            <!-- As movimentações serão carregadas via JavaScript -->
                        </ul>
                        
                        <div class="card-footer p-4 bg-gray-50 border-t">
                            <span class="stats-info">
                                <i class="fas fa-history"></i>
                                <span id="last-update">Atualizado há 5 minutos</span>
                            </span>
                        </div>
                    </div>
                    
                    <div class="card">
                        <div class="card-header">
                            <h2 class="card-title">
                                <i class="fas fa-chart-bar text-primary"></i>
                                Estatísticas de Entrada
                            </h2>
                        </div>
                        <div class="p-6">
                            <div class="grid grid-cols-3 text-center mb-4">
                                <div class="border-r">
                                    <h4 class="text-success text-2xl font-bold" id="today-inputs">15</h4>
                                    <p class="text-muted mb-0 text-sm">Entradas hoje</p>
                                </div>
                                <div class="border-r">
                                    <h4 class="text-primary text-2xl font-bold" id="week-inputs">78</h4>
                                    <p class="text-muted mb-0 text-sm">Entradas semana</p>
                                </div>
                                <div>
                                    <h4 class="text-info text-2xl font-bold" id="month-inputs">320</h4>
                                    <p class="text-muted mb-0 text-sm">Entradas mês</p>
                                </div>
                            </div>
                            
                            <div class="mt-4">
                                <h6 class="font-semibold mb-3">Reagentes mais recebidos</h6>
                                <div >
                                    <!-- As estatísticas serão carregadas via JavaScript -->
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Informações Importantes -->
                    <div class="card">
                        <div class="card-header">
                            <h2 class="card-title">
                                <i class="fas fa-info-circle text-primary"></i>
                                Informações Importantes
                            </h2>
                        </div>
                        <div class="p-6">
                            <div class="alert alert-warning">
                                <h6 class="font-semibold"><i class="fas fa-exclamation-triangle me-2"></i>Antes de registrar a entrada:</h6>
                                <ul class="mb-0 mt-2 ps-4">
                                    <li>Verifique a qualidade do reagente</li>
                                    <li>Confirme a data de validade</li>
                                    <li>Registre qualquer observação relevante</li>
                                    <li>Armazene no local adequado</li>
                                </ul>
                            </div>
                            
                            <div class="flex items-center mt-4">
                                <div class="flex-shrink-0  bg-opacity-10 p-3 rounded">
                                    <i class="fas fa-database text-primary fa-lg"></i>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <h6 class="font-semibold mb-0">Estoque Total</h6>
                                    <p class="text-muted mb-0" id="total-items">184 itens em inventário</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
    <!-- Container para toasts (notificações) -->
    <div class="toast-container"></div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Dados de exemplo para demonstração
        const sampleMovements = [
            { id: 1, type: 'in', reagent: 'Ácido clorídrico (HCl)', quantity: 5, unit: 'unidades', date: '2025-06-15T10:30:00' },
            { id: 2, type: 'in', reagent: 'Hidróxido de sódio (NaOH)', quantity: 3, unit: 'unidades', date: '2025-06-15T09:15:00' },
            { id: 3, type: 'in', reagent: 'Água destilada (H₂O)', quantity: 10, unit: 'litros', date: '2025-06-14T16:45:00' },
            { id: 4, type: 'out', reagent: 'Sulfato de cobre (CuSO₄)', quantity: 2, unit: 'unidades', date: '2025-06-14T14:20:00' },
            { id: 5, type: 'in', reagent: 'Cloreto de sódio (NaCl)', quantity: 8, unit: 'unidades', date: '2025-06-14T11:10:00' }
        ];

        const sampleStats = {
            todayInputs: 15,
            weekInputs: 78,
            monthInputs: 320,
            totalItems: 184,
            mostReceivedReagents: [
                { name: 'Água destilada (H₂O)', percentage: 35 },
                { name: 'Cloreto de sódio (NaCl)', percentage: 25 },
                { name: 'Ácido clorídrico (HCl)', percentage: 20 }
            ]
        };

        // Função para exibir notificações
        function showToast(message, type = 'success') {
            const toastContainer = document.querySelector('.toast-container');
            const toastId = 'toast-' + Date.now();
            
            const toast = document.createElement('div');
            toast.className = `toast align-items-center text-bg-${type} border-0`;
            toast.id = toastId;
            toast.setAttribute('role', 'alert');
            toast.setAttribute('aria-live', 'assertive');
            toast.setAttribute('aria-atomic', 'true');
            
            toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            `;
            
            toastContainer.appendChild(toast);
            
            const bsToast = new bootstrap.Toast(toast, {
                delay: 5000
            });
            bsToast.show();
            
            // Remover o toast do DOM após ser escondido
            toast.addEventListener('hidden.bs.toast', () => {
                toast.remove();
            });
        }

        // Função para carregar as movimentações
        function loadMovements() {
            try {
                const movementsList = document.getElementById('movements-list');
                movementsList.innerHTML = '';
                
                sampleMovements.forEach(movement => {
                    const movementItem = document.createElement('li');
                    movementItem.className = 'movement-item';
                    
                    movementItem.innerHTML = `
                        <div class="movement-icon ${movement.type === 'in' ? 'movement-in' : 'movement-out'}">
                            <i class="fas fa-arrow-${movement.type === 'in' ? 'down' : 'up'}"></i>
                        </div>
                        <div class="movement-content">
                            <p class="movement-title">${movement.type === 'in' ? 'Entrada' : 'Saída'} - ${movement.reagent}</p>
                            <div class="movement-details">
                                <span class="movement-quantity">${movement.quantity} ${movement.unit}</span>
                                <span class="movement-date">${new Date(movement.date).toLocaleString('pt-BR')}</span>
                            </div>
                        </div>
                    `;
                    
                    movementsList.appendChild(movementItem);
                });
                
                // Atualizar o timestamp da última atualização
                document.getElementById('last-update').textContent = `Atualizado agora`;
            } catch (error) {
                console.error('Erro ao carregar movimentações:', error);
            }
        }

        // Função para carregar estatísticas
        function loadStatistics() {
            try {
                // Atualizar os contadores
                document.getElementById('today-inputs').textContent = sampleStats.todayInputs;
                document.getElementById('week-inputs').textContent = sampleStats.weekInputs;
                document.getElementById('month-inputs').textContent = sampleStats.monthInputs;
                document.getElementById('total-items').textContent = `${sampleStats.totalItems} itens em inventário`;
                
                // Atualizar as estatísticas de reagentes
                const reagentsStats = document.getElementById('reagents-stats');
                reagentsStats.innerHTML = '';
                
                sampleStats.mostReceivedReagents.forEach((reagent, index) => {
                    const colors = ['bg-success', 'bg-primary', 'bg-info'];
                    const progressBar = document.createElement('div');
                    progressBar.className = 'd-flex align-items-center mt-3';
                    
                    progressBar.innerHTML = `
                        <div class="flex-grow-1 me-3">
                            <div class="small text-muted">${reagent.name}</div>
                            <div class="progress mt-1" style="height: 8px;">
                                <div class="progress-bar ${colors[index]}" role="progressbar" style="width: ${reagent.percentage}%" 
                                    aria-valuenow="${reagent.percentage}" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                        </div>
                        <div class="flex-shrink-0">
                            <span class="text-dark fw-bold">${reagent.percentage}%</span>
                        </div>
                    `;
                    
                    reagentsStats.appendChild(progressBar);
                });
            } catch (error) {
                console.error('Erro ao carregar estatísticas:', error);
            }
        }

        // Envio do formulário de entrada
        document.getElementById('input-form').addEventListener('submit', async function(event) {
            event.preventDefault();
            
            const formData = new FormData(this);
            const data = Object.fromEntries(formData.entries());
            
            try {
                // Simular uma requisição bem-sucedida
                showToast('Entrada de reagente registrada com sucesso!');
                this.reset();
                
                // Recarregar as movimentações e estatísticas
                loadMovements();
                loadStatistics();
            } catch (error) {
                console.error('Erro ao registrar entrada:', error);
                showToast('Erro ao registrar entrada. Tente novamente.', 'danger');
            }
        });
        
        // Atualizar unidade de medida baseada no reagente selecionado
        document.getElementById('reagent').addEventListener('change', function() {
            const unitMeasure = document.getElementById('unit-measure');
            const reagentId = this.value;
            
            // Lógica para determinar a unidade de medida baseada no reagente
            if (reagentId === "4") { // Água destilada
                unitMeasure.textContent = "litros";
            } else if (reagentId === "6") { // Ácido sulfúrico
                unitMeasure.textContent = "mL";
            } else {
                unitMeasure.textContent = "unidades";
            }
        });

        // Botão para ver todas as movimentações
        document.getElementById('view-all-movements').addEventListener('click', function() {
            window.location.href = '/movimentos';
        });

        // Carregar dados iniciais
        document.addEventListener('DOMContentLoaded', function() {
            loadMovements();
            loadStatistics();
        });
    </script>
</body>
</html>